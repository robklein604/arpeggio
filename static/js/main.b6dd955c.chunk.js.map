{"version":3,"sources":["Components/Play.js","Components/Mode.js","Components/Keyboard.js","Components/Control.js","Components/Chords.js","Components/Arpeggio.js","Audio.js","App.js","serviceWorker.js","index.js"],"names":["Play","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle_play","setState","playing","state","toggle_play_synth","react_default","a","createElement","onClick","className","Component","Mode","cycle_mode","mode","set_mode","src","Keyboard","Keyboard_Octave","assign","range","Octave","Keyboard_Key","type","active","active_notes","includes","note_number","add_note","remove_note","Key","toggle_active","Control","On_Drag","e","ui","pc","y","val","Math","round","min","max","Value","func","default","units","react_draggable_default","onDrag","bounds","top","bottom","defaultPosition","x","axis","Chords","text_input_change","event","value","target","add_chord","name","map","n","note_number_to_string","save_chord","_this2","chords_list","chords","c","i","Chords_Chord","key","load_chord","chord","onChange","delete_chord","Chord","_this3","notes","Arpeggio","note","push","sort","Audio_Manager","set_active_notes","filter","toConsumableArray","pop","Play_Play","Mode_Mode","Keyboard_Keyboard","Chords_Chords","Control_Control","set_bpm","set_decay","set_cutoff","Tone","_Tone","Transport","toggle","bpm","trigger_synth","time","length","_mode","note_index","_direction","note_to_play","element","document","getElementsByClassName","classList","add","setTimeout","remove","note_to_play_str","Synth","triggerAttackRelease","freq","frequency","voices","forEach","s","envelope","release","noteName","floor","pan_vol","PanVol","pan_vol_2","limiter","Limiter","connect","Master","Filter","Q","PolySynth","chain","sustain","schedule","loopEnd","loop","App","audio_manager","Arpeggio_Arpeggio","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b6dd955c.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport \"./css/Play.scss\";\r\n\r\nexport default class Play extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {playing: false}\r\n    }\r\n\r\n    toggle_play = () => {\r\n        this.setState({playing: !this.state.playing});\r\n        //play a middle 'C' for the duration of an 8th note\r\n        this.props.toggle_play_synth();\r\n    }\r\n\r\n    render(){\r\n\r\n        return (\r\n            <div \r\n                onClick={this.toggle_play} \r\n                className={\"Play \" + (this.state.playing?\"Playing\" : \"Paused\")}> \r\n                \r\n            </div>\r\n          );\r\n    }\r\n}\r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport \"./css/Mode.scss\";\r\n\r\nexport default class Mode extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {mode: \"updown\"}\r\n    }\r\n\r\n    cycle_mode = () => {\r\n        switch(this.state.mode){\r\n            case \"up\":\r\n                this.setState({mode: \"down\"});\r\n                this.props.set_mode(\"down\");\r\n                break;\r\n            case \"down\":\r\n                this.setState({mode: \"updown\"});\r\n                this.props.set_mode(\"updown\");\r\n                break;\r\n            case \"updown\":\r\n                this.setState({mode: \"up\"});\r\n                this.props.set_mode(\"up\");\r\n                break;\r\n        }\r\n        \r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"Mode_Container\">\r\n                <p>Mode:</p> \r\n                <div \r\n                    onClick={this.cycle_mode} \r\n                    className={\"mode \" + this.state.mode}>\r\n                    <img src={\"/arpeggio/images/\"+this.state.mode+\".svg\"}/> \r\n                </div>\r\n            </div>\r\n          );\r\n    }\r\n}\r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport './css/Keyboard.scss';\r\n\r\nexport default class Keyboard extends Component{\r\n    render(){\r\n        return (\r\n            <div className=\"Keyboard\">\r\n                <Octave {...this.props} range={2}/>\r\n                <Octave {...this.props} range={3}/>\r\n                <Octave {...this.props} range={4}/>\r\n                <Octave {...this.props} range={5}/>\r\n                <Octave {...this.props} range={6}/>\r\n            </div>\r\n          );\r\n    }\r\n}\r\n\r\nclass Octave extends Component{\r\n    render(){\r\n        return (\r\n            <div className=\"Octave\">\r\n                <Key type=\"White\" active={this.props.active_notes.includes(this.props.range*12 + 0)} note_number={this.props.range*12 + 0} add_note={this.props.add_note} remove_note={this.props.remove_note}/>\r\n                <Key type=\"Black\" active={this.props.active_notes.includes(this.props.range*12 + 1)} note_number={this.props.range*12 + 1} add_note={this.props.add_note} remove_note={this.props.remove_note}/>\r\n                <Key type=\"White\" active={this.props.active_notes.includes(this.props.range*12 + 2)} note_number={this.props.range*12 + 2} add_note={this.props.add_note} remove_note={this.props.remove_note}/>\r\n                <Key type=\"Black\" active={this.props.active_notes.includes(this.props.range*12 + 3)} note_number={this.props.range*12 + 3} add_note={this.props.add_note} remove_note={this.props.remove_note}/>\r\n                <Key type=\"White\" active={this.props.active_notes.includes(this.props.range*12 + 4)} note_number={this.props.range*12 + 4} add_note={this.props.add_note} remove_note={this.props.remove_note}/>\r\n                <Key type=\"White\" active={this.props.active_notes.includes(this.props.range*12 + 5)} note_number={this.props.range*12 + 5} add_note={this.props.add_note} remove_note={this.props.remove_note}/>\r\n                <Key type=\"Black\" active={this.props.active_notes.includes(this.props.range*12 + 6)} note_number={this.props.range*12 + 6} add_note={this.props.add_note} remove_note={this.props.remove_note}/>\r\n                <Key type=\"White\" active={this.props.active_notes.includes(this.props.range*12 + 7)} note_number={this.props.range*12 + 7} add_note={this.props.add_note} remove_note={this.props.remove_note}/>\r\n                <Key type=\"Black\" active={this.props.active_notes.includes(this.props.range*12 + 8)} note_number={this.props.range*12 + 8} add_note={this.props.add_note} remove_note={this.props.remove_note}/>\r\n                <Key type=\"White\" active={this.props.active_notes.includes(this.props.range*12 + 9)} note_number={this.props.range*12 + 9} add_note={this.props.add_note} remove_note={this.props.remove_note}/>\r\n                <Key type=\"Black\" active={this.props.active_notes.includes(this.props.range*12 + 10)} note_number={this.props.range*12 + 10} add_note={this.props.add_note} remove_note={this.props.remove_note}/>\r\n                <Key type=\"White\" active={this.props.active_notes.includes(this.props.range*12 + 11)} note_number={this.props.range*12 + 11} add_note={this.props.add_note} remove_note={this.props.remove_note}/>\r\n            </div>\r\n          );\r\n    }\r\n}\r\n\r\nclass Key extends Component{\r\n\r\n    toggle_active = () => {\r\n        this.props.active? this.props.remove_note(this.props.note_number) : this.props.add_note(this.props.note_number);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div onClick={this.toggle_active} className={(this.props.active? \"active \": \"\") + this.props.type + \" Key \" + this.props.note_number}>\r\n            </div>\r\n          );\r\n    }\r\n}\r\n\r\nexport {Key, Octave};","import React, {Component} from 'react';\r\nimport './css/Control.scss';\r\nimport Draggable from 'react-draggable'; // The default\r\n\r\nexport default class Control extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            Value: this.props.default\r\n        }\r\n    }\r\n\r\n    On_Drag = (e, ui) =>{\r\n        const pc = 100 - (ui.y / 1.5);\r\n        const val = Math.round(this.props.min + (pc / 100 * (this.props.max - this.props.min)) );\r\n        this.setState({Value: val});\r\n        if(this.props.func) this.props.func(val);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"Control\">\r\n                <div className=\"Name\">{this.props.type}</div>\r\n                <div className=\"Value\">{this.state.Value} <span className=\"Units\">{this.props.units}</span> </div>\r\n                <div className=\"Axis\">\r\n                    <Draggable onDrag={this.On_Drag} bounds={{top:0, bottom: 150 }} defaultPosition={{x:0, y: ( 150 - Math.round(this.props.default / this.props.max * 150)) }} axis=\"y\">\r\n                        <div className=\"Bar\"></div>\r\n                    </Draggable>\r\n                </div>\r\n            </div>\r\n          );\r\n    }\r\n}\r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport \"./css/Chords.scss\";\r\n\r\nexport default class Chords extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {value: ''};\r\n    }\r\n\r\n    text_input_change = (event) => {\r\n        this.setState({value: event.target.value});\r\n    }\r\n\r\n    add_chord = () => {\r\n        let name = this.state.value;\r\n        if(name == \"\") name = this.props.active_notes.map(n=>{return                            this.props.note_number_to_string(n)});\r\n        this.props.save_chord(name + \" \");\r\n    }\r\n\r\n    render(){\r\n\r\n        const chords_list = this.props.chords.map((c,i)=>{\r\n            return (<Chord key={i} load_chord={this.props.load_chord} chord={c}/>);\r\n        });\r\n\r\n        return (\r\n            <div className=\"Chords\">\r\n                <span>Chords:</span>\r\n                <input type=\"text\" value={this.state.value} onChange={this.text_input_change}></input>\r\n                \r\n                <div onClick={this.add_chord} className=\"add_button\">add</div>\r\n                \r\n                <div onClick={this.props.delete_chord} className=\"delete_button\">delete</div>\r\n                \r\n                <div className=\"chord_container\">\r\n                    {chords_list}\r\n                </div>\r\n            </div>\r\n          );\r\n    }\r\n}\r\n\r\nclass Chord extends Component{\r\n    render (){\r\n        return(\r\n            <div onClick = {()=>this.props.load_chord(this.props.chord.notes)} className=\"chord\">{this.props.chord.name}</div>\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport Play from './Play';\r\nimport Mode from './Mode';\r\nimport Keyboard from './Keyboard';\r\nimport Control from './Control';\r\nimport Chords from './Chords';\r\nimport './css/Arpeggio.scss';\r\n\r\nexport default class Arpeggio extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            active_notes:[],\r\n            chords:[\r\n                {name: \"C min\", notes: [36, 39, 43, 48, 51]},\r\n                {name: \"Bb maj\", notes: [34, 38, 41, 46, 50]},\r\n                {name: \"G maj\", notes: [32, 36, 39, 44, 48]},\r\n                // {name: \"Cmin\", notes: []},\r\n                // {name: \"Cmin\", notes: []},\r\n            ]\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        \r\n    }\r\n\r\n    add_note = (note) => {\r\n        let notes = this.state.active_notes;\r\n        notes.push(note);\r\n        notes.sort();\r\n        this.setState({\r\n            active_notes: notes\r\n        });\r\n        this.props.Audio_Manager.set_active_notes(notes);\r\n    }\r\n    \r\n    remove_note = (note) => {\r\n        let notes = this.state.active_notes.filter(n => n!=note);\r\n        this.setState({\r\n            active_notes: notes\r\n        });\r\n        this.props.Audio_Manager.set_active_notes(notes);\r\n    }\r\n\r\n    save_chord = (name) => {\r\n        let chords = [...this.state.chords];\r\n        chords.push({\r\n            name: name,\r\n            notes: [...this.state.active_notes]\r\n        });\r\n        this.setState({\r\n            chords: chords\r\n        });\r\n    }\r\n\r\n    load_chord = (notes) => {\r\n        this.setState({\r\n            active_notes: [...notes]\r\n        });\r\n        this.props.Audio_Manager.set_active_notes(notes);\r\n    }\r\n\r\n    delete_chord = () => {\r\n        let chords = this.state.chords;\r\n        chords.pop();\r\n        this.setState({\r\n            chords: chords\r\n        }); //redundant\r\n    }\r\n\r\n    render(){\r\n        \r\n        return (\r\n            <div className=\"Arpeggio\">\r\n                \r\n                <div className=\"Header\">\r\n                    <img className=\"Logo\" src=\"/arpeggio/images/keyboard.svg\"/>\r\n                    <Play toggle_play_synth={this.props.Audio_Manager.toggle_play_synth}/>\r\n                    <Mode set_mode={this.props.Audio_Manager.set_mode}/>\r\n                </div>\r\n\r\n                <div className=\"Content\">\r\n                    <Keyboard active_notes={this.state.active_notes} add_note={this.add_note} remove_note={this.remove_note}/>\r\n                    \r\n                    <Chords \r\n                        active_notes={this.state.active_notes}\r\n                        chords={this.state.chords}\r\n                        save_chord={this.save_chord}\r\n                        load_chord={this.load_chord}\r\n                        delete_chord={this.delete_chord}\r\n                        note_number_to_string={this.props.Audio_Manager.note_number_to_string}\r\n                    />\r\n                    <div className=\"Control_Bar\">\r\n                        <Control type=\"Speed\" default={160} min={20} max={200} units=\"bpm\" func={this.props.Audio_Manager.set_bpm}/>\r\n                        <Control type=\"Decay\" default={750} min={50} max={5000} units=\"ms\" func={this.props.Audio_Manager.set_decay}/>\r\n                        <Control type=\"Tone\" default={1500} min={10} max={2000} units=\"hz\" func={this.props.Audio_Manager.set_cutoff} />\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n","export default class Audio_Manager {\r\n\r\n    constructor(Tone){\r\n        this._Tone = Tone;\r\n\r\n        const pan_vol = new Tone.PanVol(0, -9);\r\n        const pan_vol_2 = new Tone.PanVol(0, -3);\r\n        const limiter = new Tone.Limiter(-3).connect(Tone.Master);\r\n        this.filter = new Tone.Filter(2000, \"lowpass\");\r\n        this.filter.Q.value = 6;\r\n        this.Synth = new Tone.PolySynth(8, Tone.Synth).chain(pan_vol, this.filter, pan_vol_2, limiter);\r\n\r\n        this.Synth.voices.forEach(s=>{\r\n            s.envelope.release = 0.75;\r\n            s.envelope.sustain = 1;\r\n        });\r\n\r\n        Tone.Transport.schedule(this.trigger_synth, 0);\r\n        Tone.Transport.loopEnd = '4n';\r\n        Tone.Transport.loop = true;\r\n        Tone.Transport.bpm.value = 80 + (160 * 4);\r\n        \r\n        this.notes = [];\r\n        this.note_index = 0;\r\n        this._mode = \"updown\";\r\n        this._direction = \"up\";\r\n    }\r\n\r\n    toggle_play_synth = () => {\r\n        this._Tone.Transport.toggle();\r\n    }\r\n\r\n    set_bpm = (bpm) => {\r\n        this._Tone.Transport.bpm.value = 80 + (bpm * 4);\r\n    }\r\n\r\n    trigger_synth = (time) => {\r\n        if(this.notes.length > 0){\r\n            \r\n            switch(this._mode){\r\n                case \"up\":\r\n                    this.note_index++;\r\n                    if(this.note_index >= this.notes.length) this.note_index = 0;\r\n                    \r\n                    break;\r\n                case \"down\":\r\n                    this.note_index--;      \r\n                    if(this.note_index < 0) this.note_index = this.notes.length-1;\r\n\r\n                    break;\r\n                case \"updown\":\r\n                    this._direction == \"up\" ? this.note_index ++ : this.note_index --;\r\n\r\n                    if(this.note_index == this.notes.length-1) this._direction = \"down\";\r\n                    if(this.note_index == 0) this._direction = \"up\";\r\n                    break;\r\n            }\r\n\r\n            // if(!this.note_index){\r\n            //     this.note_index = 0; //bug\r\n            // }\r\n            \r\n            let note_to_play = this.notes[this.note_index];\r\n\r\n            var element = document.getElementsByClassName(note_to_play)[0];\r\n            if(element)element.classList.add(\"playing\");\r\n\r\n            setTimeout(() => {\r\n                if(element)element.classList.remove(\"playing\");\r\n            },100);\r\n\r\n            const note_to_play_str = this.note_number_to_string(note_to_play);\r\n\r\n            if(note_to_play_str) this.Synth.triggerAttackRelease(note_to_play_str, 0.01, time);\r\n            \r\n        }\r\n    }\r\n\r\n    set_cutoff = (freq) => {\r\n        this.filter.frequency.value = freq;\r\n    }\r\n\r\n    set_decay = (value) => {\r\n        const time = value / 1000;\r\n        this.Synth.voices.forEach(s=>{\r\n            s.envelope.release = time;\r\n        });\r\n    }\r\n    \r\n    set_mode = (mode) => {\r\n        this._mode = mode;\r\n    }\r\n\r\n    set_active_notes = (active_notes) => {\r\n        this.notes = active_notes;\r\n    }\r\n\r\n    note_number_to_string = (note) => {\r\n        const oct = Math.floor(note/12);\r\n        const value = note%12;\r\n        let noteName;\r\n\r\n        if(value == 0) noteName = \"C\"\r\n        else if(value == 1) noteName = \"C#\"\r\n        else if(value == 2) noteName = \"D\"\r\n        else if(value == 3) noteName = \"D#\"\r\n        else if(value == 4) noteName = \"E\"\r\n        else if(value == 5) noteName = \"F\"\r\n        else if(value == 6) noteName = \"F#\"\r\n        else if(value == 7) noteName = \"G\"\r\n        else if(value == 8) noteName = \"G#\"\r\n        else if(value == 9) noteName = \"A\"\r\n        else if(value == 10) noteName = \"A#\"\r\n        else if(value == 11) noteName = \"B\"\r\n        \r\n        return noteName + oct;\r\n    }\r\n}","import React from 'react';\nimport './App.css';\nimport Arpeggio from './Components/Arpeggio';\nimport Audio_Manager from './Audio.js';\nimport Tone from 'tone';\n\nfunction App() {\n  const audio_manager = new Audio_Manager(Tone);\n  return (\n    <div className=\"App\">\n      <Arpeggio Audio_Manager = {audio_manager}/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}