{"version":3,"sources":["Interfaces.tsx","Components/Play.tsx","Components/Mode.tsx","Components/Key.tsx","Components/Octave.tsx","Components/Keyboard.tsx","Components/Control.tsx","Static.tsx","Components/Chords.tsx","Components/Arpeggio.tsx","Audio.tsx","App.tsx","serviceWorker.js","index.js"],"names":["Direction","Mode","KeyType","Play","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle_play","setState","playing","state","togglePlaySynth","react","onClick","className","React","ModeUI","cycle_mode","mode","Up","Down","setMode","UpDown","modeString","react_default","a","createElement","src","Component","Key","toggleActive","active","removeNote","noteNumber","addNote","keyType","type","Black","White","Octave","Key_Key","activeNotes","includes","range","Keyboard","Octave_Octave","assign","Control","On_Drag","e","ui","pc","y","val","Math","round","min","max","value","func","default","name","units","react_draggable_default","onDrag","bounds","top","bottom","defaultPosition","x","axis","noteNumberToString","note","noteName","floor","Chords","onTextInputChange","target","addChord","map","n","toString","saveChord","_this2","chords_list","chords","c","i","Chords_ChordUI","key","loadChord","chord","onChange","deleteChord","ChordUI","_this3","notes","Arpeggio","push","sort","Audio_Manager","setNotes","filter","toConsumableArray","pop","Play_Play","Mode_ModeUI","Keyboard_Keyboard","Chords_Chords","Control_Control","setBpm","setDecay","set_cutoff","tone","synth","noteIndex","direction","Transport","toggle","bpm","triggerSynth","time","length","note_to_play","element","document","getElementsByClassName","classList","add","setTimeout","remove","note_to_play_str","triggerAttackRelease","freq","frequency","voices","forEach","s","envelope","release","vol","Volume","vol_2","limiter","Limiter","connect","Master","Filter","Q","PolySynth","Synth","chain","sustain","schedule","loopEnd","loop","App","audio_manager","Tone","Arpeggio_Arpeggio","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.17af564d.chunk.js","sourcesContent":["enum Direction {\r\n    Up,\r\n    Down\r\n}\r\n\r\nenum Mode {\r\n    Up,\r\n    Down,\r\n    UpDown\r\n}\r\n\r\nenum KeyType{\r\n    Black,\r\n    White\r\n}\r\n\r\nclass Chord{\r\n    name!: string;\r\n    notes!: Array<number>;\r\n}\r\n\r\nexport {Direction, Mode, KeyType, Chord};","import * as React from 'react';\r\nimport \"./css/Play.scss\";\r\n\r\ninterface IProps {\r\n    togglePlaySynth: Function\r\n}\r\n\r\ninterface IState {\r\n    playing: boolean\r\n}\r\n\r\nexport default class Play extends React.Component<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props);\r\n        this.state = {playing: false}\r\n    }\r\n\r\n    toggle_play = () => {\r\n        this.setState({playing: !this.state.playing});\r\n        //play a middle 'C' for the duration of an 8th note\r\n        this.props.togglePlaySynth();\r\n    }\r\n\r\n    render(){\r\n\r\n        return (\r\n            <div \r\n                onClick={this.toggle_play} \r\n                className={\"Play \" + (this.state.playing?\"Playing\" : \"Paused\")}> \r\n                \r\n            </div>\r\n          );\r\n    }\r\n}\r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport \"./css/Mode.scss\";\r\nimport {Mode} from '../Interfaces';\r\n\r\ninterface IProps {\r\n    setMode: Function;\r\n}\r\n  \r\ninterface IState {\r\n    mode: Mode;\r\n}\r\n\r\nexport default class ModeUI extends React.Component<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props);\r\n        this.state = {mode: Mode.UpDown}\r\n    }\r\n\r\n    cycle_mode = () => {\r\n        switch(this.state.mode){\r\n            case Mode.Up:\r\n                this.setState({mode: Mode.Down});\r\n                this.props.setMode(Mode.Down);\r\n                break;\r\n            case Mode.Down:\r\n                this.setState({mode: Mode.UpDown});\r\n                this.props.setMode(Mode.UpDown);\r\n                break;\r\n            case Mode.UpDown:\r\n                this.setState({mode: Mode.Up});\r\n                this.props.setMode(Mode.Up);\r\n                break;\r\n        }\r\n        \r\n    }\r\n\r\n    render(){\r\n        const modeString = this.state.mode === Mode.Up? \"up\" : (this.state.mode === Mode.Down? \"down\": (this.state.mode === Mode.UpDown? \"updown\" : \"\"));\r\n        return (\r\n            <div className=\"Mode_Container\">\r\n                <p>Mode:</p> \r\n                <div \r\n                    onClick={this.cycle_mode} \r\n                    className={\"mode \" + modeString}>\r\n                    <img src={\"/arpeggio/images/\"+modeString+\".svg\"}/> \r\n                </div>\r\n            </div>\r\n          );\r\n    }\r\n}\r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport {KeyType} from '../Interfaces';\r\n\r\ninterface IProps {\r\n    active: boolean;\r\n    addNote: Function;\r\n    removeNote: Function;\r\n    noteNumber: number;\r\n    type: KeyType;\r\n}\r\n\r\ninterface IState {\r\n    \r\n}\r\n\r\nexport default class Key extends React.Component<IProps, IState>{\r\n\r\n    toggleActive = () => {\r\n        this.props.active? this.props.removeNote(this.props.noteNumber) : this.props.addNote(this.props.noteNumber);\r\n    }\r\n\r\n    render(){\r\n        const keyType = this.props.type === KeyType.Black? \"Black\" : (this.props.type === KeyType.White? \"White\" : \"\");\r\n        const className = (this.props.active? \"active \": \"\") + keyType + \" Key \" + this.props.noteNumber\r\n        return (\r\n            <div onClick={this.toggleActive} className={className}>\r\n            </div>\r\n          );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport Key from './Key';\r\nimport {KeyType} from '../Interfaces';\r\n\r\ninterface IProps {\r\n    activeNotes: Array<number>;\r\n    range: number;\r\n    addNote: Function;\r\n    removeNote: Function;\r\n}\r\n\r\ninterface IState {\r\n    \r\n}\r\n\r\nexport default class Octave extends React.Component<IProps, IState>{\r\n    render(){\r\n        return (\r\n            <div className=\"Octave\">\r\n                <Key type={KeyType.White} active={this.props.activeNotes.includes(this.props.range*12 + 0)} noteNumber={this.props.range*12 + 0} addNote={this.props.addNote} removeNote={this.props.removeNote}/>\r\n                <Key type={KeyType.Black} active={this.props.activeNotes.includes(this.props.range*12 + 1)} noteNumber={this.props.range*12 + 1} addNote={this.props.addNote} removeNote={this.props.removeNote}/>\r\n                <Key type={KeyType.White} active={this.props.activeNotes.includes(this.props.range*12 + 2)} noteNumber={this.props.range*12 + 2} addNote={this.props.addNote} removeNote={this.props.removeNote}/>\r\n                <Key type={KeyType.Black} active={this.props.activeNotes.includes(this.props.range*12 + 3)} noteNumber={this.props.range*12 + 3} addNote={this.props.addNote} removeNote={this.props.removeNote}/>\r\n                <Key type={KeyType.White} active={this.props.activeNotes.includes(this.props.range*12 + 4)} noteNumber={this.props.range*12 + 4} addNote={this.props.addNote} removeNote={this.props.removeNote}/>\r\n                <Key type={KeyType.White} active={this.props.activeNotes.includes(this.props.range*12 + 5)} noteNumber={this.props.range*12 + 5} addNote={this.props.addNote} removeNote={this.props.removeNote}/>\r\n                <Key type={KeyType.Black} active={this.props.activeNotes.includes(this.props.range*12 + 6)} noteNumber={this.props.range*12 + 6} addNote={this.props.addNote} removeNote={this.props.removeNote}/>\r\n                <Key type={KeyType.White} active={this.props.activeNotes.includes(this.props.range*12 + 7)} noteNumber={this.props.range*12 + 7} addNote={this.props.addNote} removeNote={this.props.removeNote}/>\r\n                <Key type={KeyType.Black} active={this.props.activeNotes.includes(this.props.range*12 + 8)} noteNumber={this.props.range*12 + 8} addNote={this.props.addNote} removeNote={this.props.removeNote}/>\r\n                <Key type={KeyType.White} active={this.props.activeNotes.includes(this.props.range*12 + 9)} noteNumber={this.props.range*12 + 9} addNote={this.props.addNote} removeNote={this.props.removeNote}/>\r\n                <Key type={KeyType.Black} active={this.props.activeNotes.includes(this.props.range*12 + 10)} noteNumber={this.props.range*12 + 10} addNote={this.props.addNote} removeNote={this.props.removeNote}/>\r\n                <Key type={KeyType.White} active={this.props.activeNotes.includes(this.props.range*12 + 11)} noteNumber={this.props.range*12 + 11} addNote={this.props.addNote} removeNote={this.props.removeNote}/>\r\n            </div>\r\n          );\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport './css/Keyboard.scss';\r\nimport Octave from './Octave';\r\n\r\ninterface IKeyboardProps {\r\n    activeNotes: Array<number>;\r\n    addNote: Function;\r\n    removeNote: Function;\r\n}\r\n  \r\ninterface IKeyboardState {\r\n    playing: boolean\r\n}\r\n\r\nexport default class Keyboard extends React.Component<IKeyboardProps, IKeyboardState>{\r\n    render(){\r\n        return (\r\n            <div className=\"Keyboard\">\r\n                <Octave {...this.props} range={2}/>\r\n                <Octave {...this.props} range={3}/>\r\n                <Octave {...this.props} range={4}/>\r\n                <Octave {...this.props} range={5}/>\r\n                <Octave {...this.props} range={6}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport './css/Control.scss';\r\nimport Draggable, { DraggableBounds, DraggableEvent, DraggableData } from 'react-draggable'; // The default\r\n\r\ninterface IProps {\r\n    name: string;\r\n    default: number;\r\n    min: number;\r\n    max: number;\r\n    units: string;\r\n    func: Function;\r\n}\r\n  \r\ninterface IState {\r\n    value: number\r\n}\r\n\r\nexport default class Control extends React.Component<IProps, IState>{\r\n\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        this.state = {\r\n            value: this.props.default\r\n        }\r\n    }\r\n\r\n    On_Drag = (e: DraggableEvent, ui: DraggableData) => {\r\n        const pc = 100 - (ui.y / 1.5);\r\n        const val = Math.round(this.props.min + (pc / 100 * (this.props.max - this.props.min)) );\r\n        this.setState({value: val});\r\n        if(this.props.func) this.props.func(val);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"Control\">\r\n                <div className=\"Name\">{this.props.name}</div>\r\n                <div className=\"Value\">{this.state.value} <span className=\"Units\">{this.props.units}</span> </div>\r\n                <div className=\"Axis\">\r\n                    <Draggable onDrag={this.On_Drag} bounds={{top:0, bottom: 150 } as DraggableBounds} defaultPosition={{x:0, y: ( 150 - Math.round(this.props.default / this.props.max * 150)) }} axis=\"y\">\r\n                        <div className=\"Bar\"></div>\r\n                    </Draggable>\r\n                </div>\r\n            </div>\r\n          );\r\n    }\r\n}\r\n\r\n\r\n","const noteNumberToString = (note: number) => {\r\n    const oct = Math.floor(note/12);\r\n    const value = note%12;\r\n    let noteName = \"\";\r\n\r\n    if(value == 0) noteName = \"C\"\r\n    else if(value == 1) noteName = \"C#\"\r\n    else if(value == 2) noteName = \"D\"\r\n    else if(value == 3) noteName = \"D#\"\r\n    else if(value == 4) noteName = \"E\"\r\n    else if(value == 5) noteName = \"F\"\r\n    else if(value == 6) noteName = \"F#\"\r\n    else if(value == 7) noteName = \"G\"\r\n    else if(value == 8) noteName = \"G#\"\r\n    else if(value == 9) noteName = \"A\"\r\n    else if(value == 10) noteName = \"A#\"\r\n    else if(value == 11) noteName = \"B\"\r\n    \r\n    return noteName + oct;\r\n}\r\n\r\nexport {noteNumberToString};","import React, {Component} from 'react';\r\nimport \"./css/Chords.scss\";\r\nimport {Chord} from '../Interfaces';\r\nimport { noteNumberToString } from '../Static';\r\n\r\ninterface IProps {\r\n    activeNotes: Array<number>;\r\n    chords: Array<Chord>;\r\n    saveChord: Function;\r\n    loadChord: Function;\r\n    deleteChord: React.MouseEventHandler;\r\n}\r\n  \r\ninterface IState {\r\n    value: string\r\n}\r\n\r\nexport default class Chords extends React.Component<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props);\r\n        this.state = {value: ''};\r\n    }\r\n\r\n    onTextInputChange = (e: React.ChangeEvent<HTMLInputElement> ) => {\r\n        this.setState({value: e.target.value});\r\n    }\r\n\r\n    addChord = () => {\r\n        let name: string = this.state.value;\r\n        if(name === \"\") name = this.props.activeNotes.map((n: number)=>{return noteNumberToString(n)}).toString();\r\n        this.props.saveChord(name + \" \");\r\n    }\r\n\r\n    render(){\r\n\r\n        const chords_list = this.props.chords.map((c,i)=>{\r\n            return (<ChordUI key={i} loadChord={this.props.loadChord} chord={c}/>);\r\n        });\r\n\r\n        return (\r\n            <div className=\"Chords\">\r\n                <span>Chords:</span>\r\n                <input type=\"text\" value={this.state.value} onChange={this.onTextInputChange}></input>\r\n                \r\n                <div onClick={this.addChord} className=\"add_button\">add</div>\r\n                \r\n                <div onClick={this.props.deleteChord} className=\"delete_button\">delete</div>\r\n                \r\n                <div className=\"chord_container\">\r\n                    {chords_list}\r\n                </div>\r\n            </div>\r\n          );\r\n    }\r\n}\r\n\r\ninterface IPropsChordUI {\r\n    loadChord: Function;\r\n    chord: Chord;\r\n}\r\n  \r\ninterface IStateChordUI {\r\n}\r\n\r\nclass ChordUI extends React.Component<IPropsChordUI, IStateChordUI>{\r\n    render (){\r\n        return(\r\n            <div onClick = {()=>this.props.loadChord(this.props.chord.notes)} className=\"chord\">{this.props.chord.name}</div>\r\n        );\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport Play from './Play';\r\nimport Mode from './Mode';\r\nimport Keyboard from './Keyboard';\r\nimport Control from './Control';\r\nimport Chords from './Chords';\r\nimport './css/Arpeggio.scss';\r\nimport Audio_Manager from '../Audio';\r\nimport {Chord} from '../Interfaces';\r\n\r\ninterface IProps {\r\n    Audio_Manager: Audio_Manager,\r\n}\r\n  \r\ninterface IState {\r\n    activeNotes: Array<number>,\r\n    chords: Array<Chord>,\r\n}\r\n\r\nexport default class Arpeggio extends React.Component<IProps, IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props);\r\n        this.state={\r\n            activeNotes:[],\r\n            chords:[\r\n                {name: \"C min\", notes: [36, 39, 43, 48, 51]},\r\n                {name: \"Bb maj\", notes: [34, 38, 41, 46, 50]},\r\n                {name: \"G maj\", notes: [32, 36, 39, 44, 48]},\r\n            ]\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        \r\n    }\r\n\r\n    addNote = (note: number) => {\r\n        let notes = this.state.activeNotes;\r\n        notes.push(note);\r\n        notes.sort();\r\n        this.setState({\r\n            activeNotes: notes\r\n        });\r\n        this.props.Audio_Manager.setNotes(notes);\r\n    }\r\n    \r\n    removeNote = (note: number) => {\r\n        let notes = this.state.activeNotes.filter(n => n!==note);\r\n        this.setState({\r\n            activeNotes: notes\r\n        });\r\n        this.props.Audio_Manager.setNotes(notes);\r\n    }\r\n\r\n    saveChord = (name: string) => {\r\n        let chords = [...this.state.chords];\r\n        chords.push({\r\n            name: name,\r\n            notes: [...this.state.activeNotes]\r\n        });\r\n        this.setState({\r\n            chords: chords\r\n        });\r\n    }\r\n\r\n    loadChord = (notes: Array<number>) => {\r\n        this.setState({\r\n            activeNotes: [...notes]\r\n        });\r\n        this.props.Audio_Manager.setNotes(notes);\r\n    }\r\n\r\n    deleteChord = () => {\r\n        let chords = this.state.chords;\r\n        chords.pop();\r\n        this.setState({\r\n            chords: chords\r\n        }); //redundant\r\n    }\r\n\r\n    render(){\r\n        \r\n        return (\r\n            <div className=\"Arpeggio\">\r\n                \r\n                <div className=\"Header\">\r\n                    <img className=\"Logo\" src=\"/arpeggio/images/keyboard.svg\"/>\r\n                    <Play togglePlaySynth={this.props.Audio_Manager.togglePlaySynth}/>\r\n                    <Mode setMode={this.props.Audio_Manager.setMode}/>\r\n                </div>\r\n\r\n                <div className=\"Content\">\r\n                    <Keyboard \r\n                        activeNotes={this.state.activeNotes} \r\n                        addNote={this.addNote} \r\n                        removeNote={this.removeNote}/>\r\n                    \r\n                    <Chords \r\n                        activeNotes={this.state.activeNotes}\r\n                        chords={this.state.chords}\r\n                        saveChord={this.saveChord}\r\n                        loadChord={this.loadChord}\r\n                        deleteChord={this.deleteChord}\r\n                    />\r\n                    <div className=\"Control_Bar\">\r\n                        <Control name=\"Speed\" default={160} min={20} max={200} units=\"bpm\" func={this.props.Audio_Manager.setBpm}/>\r\n                        <Control name=\"Decay\" default={750} min={50} max={5000} units=\"ms\" func={this.props.Audio_Manager.setDecay}/>\r\n                        <Control name=\"Tone\" default={1500} min={10} max={2000} units=\"hz\" func={this.props.Audio_Manager.set_cutoff} />\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n","import {Direction, Mode} from './Interfaces';\r\nimport Tone from 'tone';\r\nimport { noteNumberToString } from './Static';\r\n\r\n\r\nexport default class Audio_Manager {\r\n    filter: Tone.Filter;\r\n    synth: Tone.PolySynth;\r\n    private noteIndex: number;\r\n    private direction: Direction;\r\n    private mode: Mode;\r\n    private notes: Array<number>;\r\n    private tone: typeof Tone;\r\n\r\n    constructor(tone: typeof Tone){\r\n        this.tone = tone;\r\n\r\n        const vol = new tone.Volume(-9);\r\n        const vol_2 = new tone.Volume(-3);\r\n        const limiter = new tone.Limiter(-3).connect(tone.Master);\r\n\r\n        this.filter = new tone.Filter(2000, \"lowpass\");\r\n        this.filter.Q.value = 6;\r\n        this.synth = new tone.PolySynth(8, tone.Synth).chain(vol, this.filter, vol_2, limiter);\r\n\r\n        this.synth.voices.forEach(s=>{\r\n            s.envelope.release = 0.75;\r\n            s.envelope.sustain = 1;\r\n        });\r\n\r\n        this.tone.Transport.schedule(this.triggerSynth, 0);\r\n        this.tone.Transport.loopEnd = '4n';\r\n        this.tone.Transport.loop = true;\r\n        this.tone.Transport.bpm.value = 80 + (160 * 4);\r\n        \r\n        this.notes = [];\r\n        this.noteIndex = 0;\r\n        this.mode = Mode.UpDown;\r\n        this.direction = Direction.Up;\r\n    }\r\n\r\n    togglePlaySynth = () => {\r\n        this.tone.Transport.toggle(0);\r\n    }\r\n\r\n    setBpm = (bpm: number) => {\r\n        this.tone.Transport.bpm.value = 80 + (bpm * 4);\r\n    }\r\n\r\n    triggerSynth = (time: number) => {\r\n        if(this.notes.length > 0){\r\n            \r\n            switch(this.mode){\r\n                case Mode.Up:\r\n                    this.noteIndex++;\r\n                    if(this.noteIndex >= this.notes.length) this.noteIndex = 0;\r\n                    break;\r\n                case Mode.Down:\r\n                    this.noteIndex--;      \r\n                    if(this.noteIndex < 0) this.noteIndex = this.notes.length-1;\r\n                    break;\r\n                case Mode.UpDown:\r\n                    this.direction === Direction.Up ? this.noteIndex ++ : this.noteIndex --;\r\n                    if(this.noteIndex >= this.notes.length-1) this.direction = Direction.Down;\r\n                    if(this.noteIndex <= 0) this.direction = Direction.Up;\r\n                    break;\r\n            }\r\n            \r\n            let note_to_play = this.notes[this.noteIndex];\r\n\r\n            var element = document.getElementsByClassName(note_to_play.toString())[0];\r\n            if(element)element.classList.add(\"playing\");\r\n\r\n            setTimeout(() => {\r\n                if(element)element.classList.remove(\"playing\");\r\n            },100);\r\n\r\n            const note_to_play_str = noteNumberToString(note_to_play);\r\n\r\n            if(note_to_play_str) this.synth.triggerAttackRelease(note_to_play_str, 0.01, time);\r\n            \r\n        }\r\n    }\r\n\r\n    set_cutoff = (freq: number) => {\r\n        this.filter.frequency.value = freq;\r\n    }\r\n\r\n    setDecay = (value: number) => {\r\n        const time = value / 1000;\r\n        this.synth.voices.forEach(s=>{\r\n            s.envelope.release = time;\r\n        });\r\n    }\r\n\r\n    setMode = (value: Mode) => {\r\n        this.mode = value;\r\n    }\r\n\r\n    setNotes = (value: Array<number>) => {\r\n        this.notes = value;\r\n    }\r\n}","import React from 'react';\nimport './App.css';\nimport Arpeggio from './Components/Arpeggio';\nimport Audio_Manager from './Audio';\nimport Tone from 'tone';\n\nfunction App() {\n  const audio_manager = new Audio_Manager(Tone);\n  return (\n    <div className=\"App\">\n      <Arpeggio Audio_Manager = {audio_manager}/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}